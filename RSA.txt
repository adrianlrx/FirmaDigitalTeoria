RSA

EL RSA es un Criptosistema inventado por R. Rivest, A. Shamir, yL. Adleman, el criptosistema de clave publica más ampliamente usado en la actualidad. Pude ser usado para proveer confidencialid y firmas digitales y usa una securidad basada en la intratabilidad del Problema de la Factorizacion Entera.

Algoritmo de Generacion de claves para Cifrado de clave Publica.
Cada entidad crea una clave publica RSA y su crrespondiente clave privada.
Cada entidad A debe hacer lo siguiente:
	1 - Generar Dos primos largos (y distintos) aleatorios P y Q, de semejante tamaño.
	2 - Computar n = P*Q y ɸ = (P-1)(Q-1).
	3 - Seleccionar un entera aleatorio e, donde 1 < e < ɸ, tal que mcd(e,ɸ)=1.
	4 - Usar el Algoritmo de Euclides Extendido para computar el entero unico d, 	1 < d < ɸ, tal que  e*d ≡ 1 mod(ɸ).
	5 - La clave publica de A es (n, e); la clave privada de A es (d).

Algoritmo de cifrado de clave Publica
Una entidad B cifra un mensaje m para otra entidad A, el cual lo decifra.
(1) - Cifrado. B debe hacer lo siguiente:
	1- Obtiene la clave publica (n, e) de A.
	2 - Representa el mensaje como un entero m en el intervalo [0, n-1].
	3 - Computar c= m^e mod n
	4 - Enviar el texto cofrado c a A.
(2) - Decifrado. Para recuperar m de c, A hace lo siguiente:
	1 - Usa la clave privada d para recuperar m = c^d mod n.

Codigo en Java.
public class RandomKeyRSAExample {
	public static void main(String[] arg){
		byte[] input = new byte[]{ (byte)0xbe,(byte)0xef};
		Cipher cipher = Cipher.getInstance("RSA/None/NoPadding");
		Secure Random random = new SecureRandom();
		
		//Creacion de claves
		KeyPairGenerator generator = KeyPairGenerator.getInstance("RSA");
		generator.initialize(256, random);
		KeyPair pair = generator.generatePair();
		Key pubKey = pair.getPublic();
		Key privKey = pair.getPrivate();


		System.out.println("input : "+Utils.toHex(input));

		//cifrado
		cipher.init(Cipher.ENCRYPT_MODE, pubKey, random);
		byte[] cipherText = cipher.doFinal(input);

		System.out.println("cipher : "+Utils.toHex(cipherText));

		//decifrado
		cipher.init(Cipher.DECRYPT_MODE, privKey);
		byte[] plainText = cipher.doFinal(cipherText);

		System.out.println("plain : " + Utils.toHex(plainText));
	}
}